/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 1.4.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// CreateSubscriptionRequestBody struct for CreateSubscriptionRequestBody
type CreateSubscriptionRequestBody struct {
	Subscription *SubscriptionObject `json:"subscription,omitempty"`
	RetainPreviousOwner *bool `json:"retain_previous_owner,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateSubscriptionRequestBody CreateSubscriptionRequestBody

// NewCreateSubscriptionRequestBody instantiates a new CreateSubscriptionRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionRequestBody() *CreateSubscriptionRequestBody {
	this := CreateSubscriptionRequestBody{}
	return &this
}

// NewCreateSubscriptionRequestBodyWithDefaults instantiates a new CreateSubscriptionRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionRequestBodyWithDefaults() *CreateSubscriptionRequestBody {
	this := CreateSubscriptionRequestBody{}
	return &this
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *CreateSubscriptionRequestBody) GetSubscription() SubscriptionObject {
	if o == nil || o.Subscription == nil {
		var ret SubscriptionObject
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequestBody) GetSubscriptionOk() (*SubscriptionObject, bool) {
	if o == nil || o.Subscription == nil {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *CreateSubscriptionRequestBody) HasSubscription() bool {
	if o != nil && o.Subscription != nil {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given SubscriptionObject and assigns it to the Subscription field.
func (o *CreateSubscriptionRequestBody) SetSubscription(v SubscriptionObject) {
	o.Subscription = &v
}

// GetRetainPreviousOwner returns the RetainPreviousOwner field value if set, zero value otherwise.
func (o *CreateSubscriptionRequestBody) GetRetainPreviousOwner() bool {
	if o == nil || o.RetainPreviousOwner == nil {
		var ret bool
		return ret
	}
	return *o.RetainPreviousOwner
}

// GetRetainPreviousOwnerOk returns a tuple with the RetainPreviousOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequestBody) GetRetainPreviousOwnerOk() (*bool, bool) {
	if o == nil || o.RetainPreviousOwner == nil {
		return nil, false
	}
	return o.RetainPreviousOwner, true
}

// HasRetainPreviousOwner returns a boolean if a field has been set.
func (o *CreateSubscriptionRequestBody) HasRetainPreviousOwner() bool {
	if o != nil && o.RetainPreviousOwner != nil {
		return true
	}

	return false
}

// SetRetainPreviousOwner gets a reference to the given bool and assigns it to the RetainPreviousOwner field.
func (o *CreateSubscriptionRequestBody) SetRetainPreviousOwner(v bool) {
	o.RetainPreviousOwner = &v
}

func (o CreateSubscriptionRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Subscription != nil {
		toSerialize["subscription"] = o.Subscription
	}
	if o.RetainPreviousOwner != nil {
		toSerialize["retain_previous_owner"] = o.RetainPreviousOwner
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateSubscriptionRequestBody) UnmarshalJSON(bytes []byte) (err error) {
	varCreateSubscriptionRequestBody := _CreateSubscriptionRequestBody{}

	if err = json.Unmarshal(bytes, &varCreateSubscriptionRequestBody); err == nil {
		*o = CreateSubscriptionRequestBody(varCreateSubscriptionRequestBody)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "subscription")
		delete(additionalProperties, "retain_previous_owner")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateSubscriptionRequestBody struct {
	value *CreateSubscriptionRequestBody
	isSet bool
}

func (v NullableCreateSubscriptionRequestBody) Get() *CreateSubscriptionRequestBody {
	return v.value
}

func (v *NullableCreateSubscriptionRequestBody) Set(val *CreateSubscriptionRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionRequestBody(val *CreateSubscriptionRequestBody) *NullableCreateSubscriptionRequestBody {
	return &NullableCreateSubscriptionRequestBody{value: val, isSet: true}
}

func (v NullableCreateSubscriptionRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


