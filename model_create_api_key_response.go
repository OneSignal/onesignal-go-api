/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// CreateApiKeyResponse struct for CreateApiKeyResponse
type CreateApiKeyResponse struct {
	TokenId *string `json:"token_id,omitempty"`
	FormattedToken *string `json:"formatted_token,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateApiKeyResponse CreateApiKeyResponse

// NewCreateApiKeyResponse instantiates a new CreateApiKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiKeyResponse() *CreateApiKeyResponse {
	this := CreateApiKeyResponse{}
	return &this
}

// NewCreateApiKeyResponseWithDefaults instantiates a new CreateApiKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiKeyResponseWithDefaults() *CreateApiKeyResponse {
	this := CreateApiKeyResponse{}
	return &this
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *CreateApiKeyResponse) GetTokenId() string {
	if o == nil || o.TokenId == nil {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyResponse) GetTokenIdOk() (*string, bool) {
	if o == nil || o.TokenId == nil {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *CreateApiKeyResponse) HasTokenId() bool {
	if o != nil && o.TokenId != nil {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *CreateApiKeyResponse) SetTokenId(v string) {
	o.TokenId = &v
}

// GetFormattedToken returns the FormattedToken field value if set, zero value otherwise.
func (o *CreateApiKeyResponse) GetFormattedToken() string {
	if o == nil || o.FormattedToken == nil {
		var ret string
		return ret
	}
	return *o.FormattedToken
}

// GetFormattedTokenOk returns a tuple with the FormattedToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyResponse) GetFormattedTokenOk() (*string, bool) {
	if o == nil || o.FormattedToken == nil {
		return nil, false
	}
	return o.FormattedToken, true
}

// HasFormattedToken returns a boolean if a field has been set.
func (o *CreateApiKeyResponse) HasFormattedToken() bool {
	if o != nil && o.FormattedToken != nil {
		return true
	}

	return false
}

// SetFormattedToken gets a reference to the given string and assigns it to the FormattedToken field.
func (o *CreateApiKeyResponse) SetFormattedToken(v string) {
	o.FormattedToken = &v
}

func (o CreateApiKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenId != nil {
		toSerialize["token_id"] = o.TokenId
	}
	if o.FormattedToken != nil {
		toSerialize["formatted_token"] = o.FormattedToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateApiKeyResponse) UnmarshalJSON(bytes []byte) (err error) {
	varCreateApiKeyResponse := _CreateApiKeyResponse{}

	if err = json.Unmarshal(bytes, &varCreateApiKeyResponse); err == nil {
		*o = CreateApiKeyResponse(varCreateApiKeyResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "token_id")
		delete(additionalProperties, "formatted_token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateApiKeyResponse struct {
	value *CreateApiKeyResponse
	isSet bool
}

func (v NullableCreateApiKeyResponse) Get() *CreateApiKeyResponse {
	return v.value
}

func (v *NullableCreateApiKeyResponse) Set(val *CreateApiKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiKeyResponse(val *CreateApiKeyResponse) *NullableCreateApiKeyResponse {
	return &NullableCreateApiKeyResponse{value: val, isSet: true}
}

func (v NullableCreateApiKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


