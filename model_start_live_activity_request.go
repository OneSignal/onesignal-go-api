/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// StartLiveActivityRequest struct for StartLiveActivityRequest
type StartLiveActivityRequest struct {
	// An internal name to assist with your campaign organization. This does not get displayed in the message itself.
	Name string `json:"name"`
	Event string `json:"event"`
	// Set a unique activity_id to track and manage the Live Activity.
	ActivityId string `json:"activity_id"`
	// Default/static data to initialize the Live Activity upon start.
	EventAttributes map[string]interface{} `json:"event_attributes"`
	// Dynamic content used to update the running Live Activity at start. Must match the ContentState interface defined in your app.
	EventUpdates map[string]interface{} `json:"event_updates"`
	Contents LanguageStringMap `json:"contents"`
	Headings LanguageStringMap `json:"headings"`
	// Accepts Unix timestamp in seconds. When time reaches the configured stale date, the system considers the Live Activity out of date, and the ActivityState of the Live Activity changes to ActivityState.stale.
	StaleDate *int32 `json:"stale_date,omitempty"`
	// Delivery priority through the push provider (APNs). Pass 10 for higher priority notifications, or 5 for lower priority notifications. Lower priority notifications are sent based on the power considerations of the end user's device. If not set, defaults to 10.
	Priority *int32 `json:"priority,omitempty"`
	// iOS 15+. A score to indicate how a notification should be displayed when grouped. Use a float between 0-1.
	IosRelevanceScore NullableFloat32 `json:"ios_relevance_score,omitempty"`
	// Correlation and idempotency key. A request received with this parameter will first look for another notification with the same idempotency key. If one exists, a notification will not be sent, and result of the previous operation will instead be returned. Therefore, if you plan on using this feature, it's important to use a good source of randomness to generate the UUID passed here. This key is only idempotent for 30 days. After 30 days, the notification could be removed from our system and a notification with the same idempotency key will be sent again.   See Idempotent Notification Requests for more details writeOnly: true 
	IdempotencyKey NullableString `json:"idempotency_key,omitempty"`
	// Target specific users by aliases assigned via API. An alias can be an external_id, onesignal_id, or a custom alias. Accepts an object where keys are alias labels and values are arrays of alias IDs to include Example usage: { \"external_id\": [\"exId1\", \"extId2\"], \"internal_label\": [\"id1\", \"id2\"] } Not compatible with any other targeting parameters. REQUIRED: REST API Key Authentication Limit of 2,000 entries per REST API call Note: If targeting push, email, or sms subscribers with same ids, use with target_channel to indicate you are sending a push or email or sms.
	IncludeAliases map[string][]string `json:"include_aliases,omitempty"`
	// Specific subscription ids to target. Not compatible with other targeting parameters.
	IncludeSubscriptionIds []string `json:"include_subscription_ids,omitempty"`
	// Segment names to include. Only compatible with excluded_segments.
	IncludedSegments []string `json:"included_segments,omitempty"`
	// Segment names to exclude. Only compatible with included_segments.
	ExcludedSegments []string `json:"excluded_segments,omitempty"`
	Filters []FilterExpression `json:"filters,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StartLiveActivityRequest StartLiveActivityRequest

// NewStartLiveActivityRequest instantiates a new StartLiveActivityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartLiveActivityRequest(name string, event string, activityId string, eventAttributes map[string]interface{}, eventUpdates map[string]interface{}, contents LanguageStringMap, headings LanguageStringMap) *StartLiveActivityRequest {
	this := StartLiveActivityRequest{}
	this.Name = name
	this.Event = event
	this.ActivityId = activityId
	this.EventAttributes = eventAttributes
	this.EventUpdates = eventUpdates
	this.Contents = contents
	this.Headings = headings
	return &this
}

// NewStartLiveActivityRequestWithDefaults instantiates a new StartLiveActivityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartLiveActivityRequestWithDefaults() *StartLiveActivityRequest {
	this := StartLiveActivityRequest{}
	var event string = "start"
	this.Event = event
	return &this
}

// GetName returns the Name field value
func (o *StartLiveActivityRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StartLiveActivityRequest) SetName(v string) {
	o.Name = v
}

// GetEvent returns the Event field value
func (o *StartLiveActivityRequest) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *StartLiveActivityRequest) SetEvent(v string) {
	o.Event = v
}

// GetActivityId returns the ActivityId field value
func (o *StartLiveActivityRequest) GetActivityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetActivityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityId, true
}

// SetActivityId sets field value
func (o *StartLiveActivityRequest) SetActivityId(v string) {
	o.ActivityId = v
}

// GetEventAttributes returns the EventAttributes field value
func (o *StartLiveActivityRequest) GetEventAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.EventAttributes
}

// GetEventAttributesOk returns a tuple with the EventAttributes field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetEventAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventAttributes, true
}

// SetEventAttributes sets field value
func (o *StartLiveActivityRequest) SetEventAttributes(v map[string]interface{}) {
	o.EventAttributes = v
}

// GetEventUpdates returns the EventUpdates field value
func (o *StartLiveActivityRequest) GetEventUpdates() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.EventUpdates
}

// GetEventUpdatesOk returns a tuple with the EventUpdates field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetEventUpdatesOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventUpdates, true
}

// SetEventUpdates sets field value
func (o *StartLiveActivityRequest) SetEventUpdates(v map[string]interface{}) {
	o.EventUpdates = v
}

// GetContents returns the Contents field value
func (o *StartLiveActivityRequest) GetContents() LanguageStringMap {
	if o == nil {
		var ret LanguageStringMap
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetContentsOk() (*LanguageStringMap, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contents, true
}

// SetContents sets field value
func (o *StartLiveActivityRequest) SetContents(v LanguageStringMap) {
	o.Contents = v
}

// GetHeadings returns the Headings field value
func (o *StartLiveActivityRequest) GetHeadings() LanguageStringMap {
	if o == nil {
		var ret LanguageStringMap
		return ret
	}

	return o.Headings
}

// GetHeadingsOk returns a tuple with the Headings field value
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetHeadingsOk() (*LanguageStringMap, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headings, true
}

// SetHeadings sets field value
func (o *StartLiveActivityRequest) SetHeadings(v LanguageStringMap) {
	o.Headings = v
}

// GetStaleDate returns the StaleDate field value if set, zero value otherwise.
func (o *StartLiveActivityRequest) GetStaleDate() int32 {
	if o == nil || o.StaleDate == nil {
		var ret int32
		return ret
	}
	return *o.StaleDate
}

// GetStaleDateOk returns a tuple with the StaleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetStaleDateOk() (*int32, bool) {
	if o == nil || o.StaleDate == nil {
		return nil, false
	}
	return o.StaleDate, true
}

// HasStaleDate returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasStaleDate() bool {
	if o != nil && o.StaleDate != nil {
		return true
	}

	return false
}

// SetStaleDate gets a reference to the given int32 and assigns it to the StaleDate field.
func (o *StartLiveActivityRequest) SetStaleDate(v int32) {
	o.StaleDate = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *StartLiveActivityRequest) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartLiveActivityRequest) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *StartLiveActivityRequest) SetPriority(v int32) {
	o.Priority = &v
}

// GetIosRelevanceScore returns the IosRelevanceScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetIosRelevanceScore() float32 {
	if o == nil || o.IosRelevanceScore.Get() == nil {
		var ret float32
		return ret
	}
	return *o.IosRelevanceScore.Get()
}

// GetIosRelevanceScoreOk returns a tuple with the IosRelevanceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetIosRelevanceScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IosRelevanceScore.Get(), o.IosRelevanceScore.IsSet()
}

// HasIosRelevanceScore returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasIosRelevanceScore() bool {
	if o != nil && o.IosRelevanceScore.IsSet() {
		return true
	}

	return false
}

// SetIosRelevanceScore gets a reference to the given NullableFloat32 and assigns it to the IosRelevanceScore field.
func (o *StartLiveActivityRequest) SetIosRelevanceScore(v float32) {
	o.IosRelevanceScore.Set(&v)
}
// SetIosRelevanceScoreNil sets the value for IosRelevanceScore to be an explicit nil
func (o *StartLiveActivityRequest) SetIosRelevanceScoreNil() {
	o.IosRelevanceScore.Set(nil)
}

// UnsetIosRelevanceScore ensures that no value is present for IosRelevanceScore, not even an explicit nil
func (o *StartLiveActivityRequest) UnsetIosRelevanceScore() {
	o.IosRelevanceScore.Unset()
}

// GetIdempotencyKey returns the IdempotencyKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetIdempotencyKey() string {
	if o == nil || o.IdempotencyKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.IdempotencyKey.Get()
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetIdempotencyKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdempotencyKey.Get(), o.IdempotencyKey.IsSet()
}

// HasIdempotencyKey returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasIdempotencyKey() bool {
	if o != nil && o.IdempotencyKey.IsSet() {
		return true
	}

	return false
}

// SetIdempotencyKey gets a reference to the given NullableString and assigns it to the IdempotencyKey field.
func (o *StartLiveActivityRequest) SetIdempotencyKey(v string) {
	o.IdempotencyKey.Set(&v)
}
// SetIdempotencyKeyNil sets the value for IdempotencyKey to be an explicit nil
func (o *StartLiveActivityRequest) SetIdempotencyKeyNil() {
	o.IdempotencyKey.Set(nil)
}

// UnsetIdempotencyKey ensures that no value is present for IdempotencyKey, not even an explicit nil
func (o *StartLiveActivityRequest) UnsetIdempotencyKey() {
	o.IdempotencyKey.Unset()
}

// GetIncludeAliases returns the IncludeAliases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetIncludeAliases() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}
	return o.IncludeAliases
}

// GetIncludeAliasesOk returns a tuple with the IncludeAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetIncludeAliasesOk() (*map[string][]string, bool) {
	if o == nil || o.IncludeAliases == nil {
		return nil, false
	}
	return &o.IncludeAliases, true
}

// HasIncludeAliases returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasIncludeAliases() bool {
	if o != nil && o.IncludeAliases != nil {
		return true
	}

	return false
}

// SetIncludeAliases gets a reference to the given map[string][]string and assigns it to the IncludeAliases field.
func (o *StartLiveActivityRequest) SetIncludeAliases(v map[string][]string) {
	o.IncludeAliases = v
}

// GetIncludeSubscriptionIds returns the IncludeSubscriptionIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetIncludeSubscriptionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludeSubscriptionIds
}

// GetIncludeSubscriptionIdsOk returns a tuple with the IncludeSubscriptionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetIncludeSubscriptionIdsOk() ([]string, bool) {
	if o == nil || o.IncludeSubscriptionIds == nil {
		return nil, false
	}
	return o.IncludeSubscriptionIds, true
}

// HasIncludeSubscriptionIds returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasIncludeSubscriptionIds() bool {
	if o != nil && o.IncludeSubscriptionIds != nil {
		return true
	}

	return false
}

// SetIncludeSubscriptionIds gets a reference to the given []string and assigns it to the IncludeSubscriptionIds field.
func (o *StartLiveActivityRequest) SetIncludeSubscriptionIds(v []string) {
	o.IncludeSubscriptionIds = v
}

// GetIncludedSegments returns the IncludedSegments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetIncludedSegments() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedSegments
}

// GetIncludedSegmentsOk returns a tuple with the IncludedSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetIncludedSegmentsOk() ([]string, bool) {
	if o == nil || o.IncludedSegments == nil {
		return nil, false
	}
	return o.IncludedSegments, true
}

// HasIncludedSegments returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasIncludedSegments() bool {
	if o != nil && o.IncludedSegments != nil {
		return true
	}

	return false
}

// SetIncludedSegments gets a reference to the given []string and assigns it to the IncludedSegments field.
func (o *StartLiveActivityRequest) SetIncludedSegments(v []string) {
	o.IncludedSegments = v
}

// GetExcludedSegments returns the ExcludedSegments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetExcludedSegments() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludedSegments
}

// GetExcludedSegmentsOk returns a tuple with the ExcludedSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetExcludedSegmentsOk() ([]string, bool) {
	if o == nil || o.ExcludedSegments == nil {
		return nil, false
	}
	return o.ExcludedSegments, true
}

// HasExcludedSegments returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasExcludedSegments() bool {
	if o != nil && o.ExcludedSegments != nil {
		return true
	}

	return false
}

// SetExcludedSegments gets a reference to the given []string and assigns it to the ExcludedSegments field.
func (o *StartLiveActivityRequest) SetExcludedSegments(v []string) {
	o.ExcludedSegments = v
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartLiveActivityRequest) GetFilters() []FilterExpression {
	if o == nil {
		var ret []FilterExpression
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartLiveActivityRequest) GetFiltersOk() ([]FilterExpression, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *StartLiveActivityRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []FilterExpression and assigns it to the Filters field.
func (o *StartLiveActivityRequest) SetFilters(v []FilterExpression) {
	o.Filters = v
}

func (o StartLiveActivityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["event"] = o.Event
	}
	if true {
		toSerialize["activity_id"] = o.ActivityId
	}
	if true {
		toSerialize["event_attributes"] = o.EventAttributes
	}
	if true {
		toSerialize["event_updates"] = o.EventUpdates
	}
	if true {
		toSerialize["contents"] = o.Contents
	}
	if true {
		toSerialize["headings"] = o.Headings
	}
	if o.StaleDate != nil {
		toSerialize["stale_date"] = o.StaleDate
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.IosRelevanceScore.IsSet() {
		toSerialize["ios_relevance_score"] = o.IosRelevanceScore.Get()
	}
	if o.IdempotencyKey.IsSet() {
		toSerialize["idempotency_key"] = o.IdempotencyKey.Get()
	}
	if o.IncludeAliases != nil {
		toSerialize["include_aliases"] = o.IncludeAliases
	}
	if o.IncludeSubscriptionIds != nil {
		toSerialize["include_subscription_ids"] = o.IncludeSubscriptionIds
	}
	if o.IncludedSegments != nil {
		toSerialize["included_segments"] = o.IncludedSegments
	}
	if o.ExcludedSegments != nil {
		toSerialize["excluded_segments"] = o.ExcludedSegments
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *StartLiveActivityRequest) UnmarshalJSON(bytes []byte) (err error) {
	varStartLiveActivityRequest := _StartLiveActivityRequest{}

	if err = json.Unmarshal(bytes, &varStartLiveActivityRequest); err == nil {
		*o = StartLiveActivityRequest(varStartLiveActivityRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "event")
		delete(additionalProperties, "activity_id")
		delete(additionalProperties, "event_attributes")
		delete(additionalProperties, "event_updates")
		delete(additionalProperties, "contents")
		delete(additionalProperties, "headings")
		delete(additionalProperties, "stale_date")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "ios_relevance_score")
		delete(additionalProperties, "idempotency_key")
		delete(additionalProperties, "include_aliases")
		delete(additionalProperties, "include_subscription_ids")
		delete(additionalProperties, "included_segments")
		delete(additionalProperties, "excluded_segments")
		delete(additionalProperties, "filters")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStartLiveActivityRequest struct {
	value *StartLiveActivityRequest
	isSet bool
}

func (v NullableStartLiveActivityRequest) Get() *StartLiveActivityRequest {
	return v.value
}

func (v *NullableStartLiveActivityRequest) Set(val *StartLiveActivityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartLiveActivityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartLiveActivityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartLiveActivityRequest(val *StartLiveActivityRequest) *NullableStartLiveActivityRequest {
	return &NullableStartLiveActivityRequest{value: val, isSet: true}
}

func (v NullableStartLiveActivityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartLiveActivityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


