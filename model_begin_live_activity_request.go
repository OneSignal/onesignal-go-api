/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 1.4.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// BeginLiveActivityRequest struct for BeginLiveActivityRequest
type BeginLiveActivityRequest struct {
	PushToken string `json:"push_token"`
	SubscriptionId string `json:"subscription_id"`
	AdditionalProperties map[string]interface{}
}

type _BeginLiveActivityRequest BeginLiveActivityRequest

// NewBeginLiveActivityRequest instantiates a new BeginLiveActivityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeginLiveActivityRequest(pushToken string, subscriptionId string) *BeginLiveActivityRequest {
	this := BeginLiveActivityRequest{}
	this.PushToken = pushToken
	this.SubscriptionId = subscriptionId
	return &this
}

// NewBeginLiveActivityRequestWithDefaults instantiates a new BeginLiveActivityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeginLiveActivityRequestWithDefaults() *BeginLiveActivityRequest {
	this := BeginLiveActivityRequest{}
	return &this
}

// GetPushToken returns the PushToken field value
func (o *BeginLiveActivityRequest) GetPushToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PushToken
}

// GetPushTokenOk returns a tuple with the PushToken field value
// and a boolean to check if the value has been set.
func (o *BeginLiveActivityRequest) GetPushTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushToken, true
}

// SetPushToken sets field value
func (o *BeginLiveActivityRequest) SetPushToken(v string) {
	o.PushToken = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *BeginLiveActivityRequest) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *BeginLiveActivityRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *BeginLiveActivityRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

func (o BeginLiveActivityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["push_token"] = o.PushToken
	}
	if true {
		toSerialize["subscription_id"] = o.SubscriptionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeginLiveActivityRequest) UnmarshalJSON(bytes []byte) (err error) {
	varBeginLiveActivityRequest := _BeginLiveActivityRequest{}

	if err = json.Unmarshal(bytes, &varBeginLiveActivityRequest); err == nil {
		*o = BeginLiveActivityRequest(varBeginLiveActivityRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "push_token")
		delete(additionalProperties, "subscription_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeginLiveActivityRequest struct {
	value *BeginLiveActivityRequest
	isSet bool
}

func (v NullableBeginLiveActivityRequest) Get() *BeginLiveActivityRequest {
	return v.value
}

func (v *NullableBeginLiveActivityRequest) Set(val *BeginLiveActivityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBeginLiveActivityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBeginLiveActivityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeginLiveActivityRequest(val *BeginLiveActivityRequest) *NullableBeginLiveActivityRequest {
	return &NullableBeginLiveActivityRequest{value: val, isSet: true}
}

func (v NullableBeginLiveActivityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeginLiveActivityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


