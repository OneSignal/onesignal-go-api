/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.1.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// SubscriptionNotificationTarget struct for SubscriptionNotificationTarget
type SubscriptionNotificationTarget struct {
	// Specific subscription ids to send your notification to. _Does not require API Auth Key._ Not compatible with any other targeting parameters. Example: [\"1dd608f2-c6a1-11e3-851d-000c2940e62c\"] Limit of 2,000 entries per REST API call 
	IncludeSubscriptionIds []string `json:"include_subscription_ids,omitempty"`
	// Recommended for Sending Emails - Target specific email addresses. If an email does not correspond to an existing user, a new user will be created. Example: nick@catfac.ts Limit of 2,000 entries per REST API call 
	IncludeEmailTokens []string `json:"include_email_tokens,omitempty"`
	// Recommended for Sending SMS - Target specific phone numbers. The phone number should be in the E.164 format. Phone number should be an existing subscriber on OneSignal. Refer our docs to learn how to add phone numbers to OneSignal. Example phone number: +1999999999 Limit of 2,000 entries per REST API call 
	IncludePhoneNumbers []string `json:"include_phone_numbers,omitempty"`
	// Not Recommended: Please consider using include_subscription_ids or include_aliases instead. Target using iOS device tokens. Warning: Only works with Production tokens. All non-alphanumeric characters must be removed from each token. If a token does not correspond to an existing user, a new user will be created. Example: ce777617da7f548fe7a9ab6febb56cf39fba6d38203... Limit of 2,000 entries per REST API call 
	IncludeIosTokens []string `json:"include_ios_tokens,omitempty"`
	// Not Recommended: Please consider using include_subscription_ids or include_aliases instead. Target using Windows URIs. If a token does not correspond to an existing user, a new user will be created. Example: http://s.notify.live.net/u/1/bn1/HmQAAACPaLDr-... Limit of 2,000 entries per REST API call 
	IncludeWpWnsUris []string `json:"include_wp_wns_uris,omitempty"`
	// Not Recommended: Please consider using include_subscription_ids or include_aliases instead. Target using Amazon ADM registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: amzn1.adm-registration.v1.XpvSSUk0Rc3hTVVV... Limit of 2,000 entries per REST API call 
	IncludeAmazonRegIds []string `json:"include_amazon_reg_ids,omitempty"`
	// Not Recommended: Please consider using include_subscription_ids or include_aliases instead. Target using Chrome App registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call 
	IncludeChromeRegIds []string `json:"include_chrome_reg_ids,omitempty"`
	// Not Recommended: Please consider using include_subscription_ids or include_aliases instead. Target using Chrome Web Push registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call 
	IncludeChromeWebRegIds []string `json:"include_chrome_web_reg_ids,omitempty"`
	// Not Recommended: Please consider using include_subscription_ids or include_aliases instead. Target using Android device registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call 
	IncludeAndroidRegIds []string `json:"include_android_reg_ids,omitempty"`
	// Target specific users by aliases assigned via API. An alias can be an external_id, onesignal_id, or a custom alias. Accepts an object where keys are alias labels and values are arrays of alias IDs to include Example usage: { \"external_id\": [\"exId1\", \"extId2\"], \"internal_label\": [\"id1\", \"id2\"] } Not compatible with any other targeting parameters. REQUIRED: REST API Key Authentication Limit of 2,000 entries per REST API call Note: If targeting push, email, or sms subscribers with same ids, use with target_channel to indicate you are sending a push or email or sms.
	IncludeAliases map[string][]string `json:"include_aliases,omitempty"`
	TargetChannel *string `json:"target_channel,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SubscriptionNotificationTarget SubscriptionNotificationTarget

// NewSubscriptionNotificationTarget instantiates a new SubscriptionNotificationTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionNotificationTarget() *SubscriptionNotificationTarget {
	this := SubscriptionNotificationTarget{}
	return &this
}

// NewSubscriptionNotificationTargetWithDefaults instantiates a new SubscriptionNotificationTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionNotificationTargetWithDefaults() *SubscriptionNotificationTarget {
	this := SubscriptionNotificationTarget{}
	return &this
}

// GetIncludeSubscriptionIds returns the IncludeSubscriptionIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionNotificationTarget) GetIncludeSubscriptionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludeSubscriptionIds
}

// GetIncludeSubscriptionIdsOk returns a tuple with the IncludeSubscriptionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionNotificationTarget) GetIncludeSubscriptionIdsOk() ([]string, bool) {
	if o == nil || o.IncludeSubscriptionIds == nil {
		return nil, false
	}
	return o.IncludeSubscriptionIds, true
}

// HasIncludeSubscriptionIds returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeSubscriptionIds() bool {
	if o != nil && o.IncludeSubscriptionIds != nil {
		return true
	}

	return false
}

// SetIncludeSubscriptionIds gets a reference to the given []string and assigns it to the IncludeSubscriptionIds field.
func (o *SubscriptionNotificationTarget) SetIncludeSubscriptionIds(v []string) {
	o.IncludeSubscriptionIds = v
}

// GetIncludeEmailTokens returns the IncludeEmailTokens field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeEmailTokens() []string {
	if o == nil || o.IncludeEmailTokens == nil {
		var ret []string
		return ret
	}
	return o.IncludeEmailTokens
}

// GetIncludeEmailTokensOk returns a tuple with the IncludeEmailTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeEmailTokensOk() ([]string, bool) {
	if o == nil || o.IncludeEmailTokens == nil {
		return nil, false
	}
	return o.IncludeEmailTokens, true
}

// HasIncludeEmailTokens returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeEmailTokens() bool {
	if o != nil && o.IncludeEmailTokens != nil {
		return true
	}

	return false
}

// SetIncludeEmailTokens gets a reference to the given []string and assigns it to the IncludeEmailTokens field.
func (o *SubscriptionNotificationTarget) SetIncludeEmailTokens(v []string) {
	o.IncludeEmailTokens = v
}

// GetIncludePhoneNumbers returns the IncludePhoneNumbers field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludePhoneNumbers() []string {
	if o == nil || o.IncludePhoneNumbers == nil {
		var ret []string
		return ret
	}
	return o.IncludePhoneNumbers
}

// GetIncludePhoneNumbersOk returns a tuple with the IncludePhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludePhoneNumbersOk() ([]string, bool) {
	if o == nil || o.IncludePhoneNumbers == nil {
		return nil, false
	}
	return o.IncludePhoneNumbers, true
}

// HasIncludePhoneNumbers returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludePhoneNumbers() bool {
	if o != nil && o.IncludePhoneNumbers != nil {
		return true
	}

	return false
}

// SetIncludePhoneNumbers gets a reference to the given []string and assigns it to the IncludePhoneNumbers field.
func (o *SubscriptionNotificationTarget) SetIncludePhoneNumbers(v []string) {
	o.IncludePhoneNumbers = v
}

// GetIncludeIosTokens returns the IncludeIosTokens field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeIosTokens() []string {
	if o == nil || o.IncludeIosTokens == nil {
		var ret []string
		return ret
	}
	return o.IncludeIosTokens
}

// GetIncludeIosTokensOk returns a tuple with the IncludeIosTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeIosTokensOk() ([]string, bool) {
	if o == nil || o.IncludeIosTokens == nil {
		return nil, false
	}
	return o.IncludeIosTokens, true
}

// HasIncludeIosTokens returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeIosTokens() bool {
	if o != nil && o.IncludeIosTokens != nil {
		return true
	}

	return false
}

// SetIncludeIosTokens gets a reference to the given []string and assigns it to the IncludeIosTokens field.
func (o *SubscriptionNotificationTarget) SetIncludeIosTokens(v []string) {
	o.IncludeIosTokens = v
}

// GetIncludeWpWnsUris returns the IncludeWpWnsUris field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeWpWnsUris() []string {
	if o == nil || o.IncludeWpWnsUris == nil {
		var ret []string
		return ret
	}
	return o.IncludeWpWnsUris
}

// GetIncludeWpWnsUrisOk returns a tuple with the IncludeWpWnsUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeWpWnsUrisOk() ([]string, bool) {
	if o == nil || o.IncludeWpWnsUris == nil {
		return nil, false
	}
	return o.IncludeWpWnsUris, true
}

// HasIncludeWpWnsUris returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeWpWnsUris() bool {
	if o != nil && o.IncludeWpWnsUris != nil {
		return true
	}

	return false
}

// SetIncludeWpWnsUris gets a reference to the given []string and assigns it to the IncludeWpWnsUris field.
func (o *SubscriptionNotificationTarget) SetIncludeWpWnsUris(v []string) {
	o.IncludeWpWnsUris = v
}

// GetIncludeAmazonRegIds returns the IncludeAmazonRegIds field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeAmazonRegIds() []string {
	if o == nil || o.IncludeAmazonRegIds == nil {
		var ret []string
		return ret
	}
	return o.IncludeAmazonRegIds
}

// GetIncludeAmazonRegIdsOk returns a tuple with the IncludeAmazonRegIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeAmazonRegIdsOk() ([]string, bool) {
	if o == nil || o.IncludeAmazonRegIds == nil {
		return nil, false
	}
	return o.IncludeAmazonRegIds, true
}

// HasIncludeAmazonRegIds returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeAmazonRegIds() bool {
	if o != nil && o.IncludeAmazonRegIds != nil {
		return true
	}

	return false
}

// SetIncludeAmazonRegIds gets a reference to the given []string and assigns it to the IncludeAmazonRegIds field.
func (o *SubscriptionNotificationTarget) SetIncludeAmazonRegIds(v []string) {
	o.IncludeAmazonRegIds = v
}

// GetIncludeChromeRegIds returns the IncludeChromeRegIds field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeChromeRegIds() []string {
	if o == nil || o.IncludeChromeRegIds == nil {
		var ret []string
		return ret
	}
	return o.IncludeChromeRegIds
}

// GetIncludeChromeRegIdsOk returns a tuple with the IncludeChromeRegIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeChromeRegIdsOk() ([]string, bool) {
	if o == nil || o.IncludeChromeRegIds == nil {
		return nil, false
	}
	return o.IncludeChromeRegIds, true
}

// HasIncludeChromeRegIds returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeChromeRegIds() bool {
	if o != nil && o.IncludeChromeRegIds != nil {
		return true
	}

	return false
}

// SetIncludeChromeRegIds gets a reference to the given []string and assigns it to the IncludeChromeRegIds field.
func (o *SubscriptionNotificationTarget) SetIncludeChromeRegIds(v []string) {
	o.IncludeChromeRegIds = v
}

// GetIncludeChromeWebRegIds returns the IncludeChromeWebRegIds field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeChromeWebRegIds() []string {
	if o == nil || o.IncludeChromeWebRegIds == nil {
		var ret []string
		return ret
	}
	return o.IncludeChromeWebRegIds
}

// GetIncludeChromeWebRegIdsOk returns a tuple with the IncludeChromeWebRegIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeChromeWebRegIdsOk() ([]string, bool) {
	if o == nil || o.IncludeChromeWebRegIds == nil {
		return nil, false
	}
	return o.IncludeChromeWebRegIds, true
}

// HasIncludeChromeWebRegIds returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeChromeWebRegIds() bool {
	if o != nil && o.IncludeChromeWebRegIds != nil {
		return true
	}

	return false
}

// SetIncludeChromeWebRegIds gets a reference to the given []string and assigns it to the IncludeChromeWebRegIds field.
func (o *SubscriptionNotificationTarget) SetIncludeChromeWebRegIds(v []string) {
	o.IncludeChromeWebRegIds = v
}

// GetIncludeAndroidRegIds returns the IncludeAndroidRegIds field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetIncludeAndroidRegIds() []string {
	if o == nil || o.IncludeAndroidRegIds == nil {
		var ret []string
		return ret
	}
	return o.IncludeAndroidRegIds
}

// GetIncludeAndroidRegIdsOk returns a tuple with the IncludeAndroidRegIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetIncludeAndroidRegIdsOk() ([]string, bool) {
	if o == nil || o.IncludeAndroidRegIds == nil {
		return nil, false
	}
	return o.IncludeAndroidRegIds, true
}

// HasIncludeAndroidRegIds returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeAndroidRegIds() bool {
	if o != nil && o.IncludeAndroidRegIds != nil {
		return true
	}

	return false
}

// SetIncludeAndroidRegIds gets a reference to the given []string and assigns it to the IncludeAndroidRegIds field.
func (o *SubscriptionNotificationTarget) SetIncludeAndroidRegIds(v []string) {
	o.IncludeAndroidRegIds = v
}

// GetIncludeAliases returns the IncludeAliases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionNotificationTarget) GetIncludeAliases() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}
	return o.IncludeAliases
}

// GetIncludeAliasesOk returns a tuple with the IncludeAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionNotificationTarget) GetIncludeAliasesOk() (*map[string][]string, bool) {
	if o == nil || o.IncludeAliases == nil {
		return nil, false
	}
	return &o.IncludeAliases, true
}

// HasIncludeAliases returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasIncludeAliases() bool {
	if o != nil && o.IncludeAliases != nil {
		return true
	}

	return false
}

// SetIncludeAliases gets a reference to the given map[string][]string and assigns it to the IncludeAliases field.
func (o *SubscriptionNotificationTarget) SetIncludeAliases(v map[string][]string) {
	o.IncludeAliases = v
}

// GetTargetChannel returns the TargetChannel field value if set, zero value otherwise.
func (o *SubscriptionNotificationTarget) GetTargetChannel() string {
	if o == nil || o.TargetChannel == nil {
		var ret string
		return ret
	}
	return *o.TargetChannel
}

// GetTargetChannelOk returns a tuple with the TargetChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionNotificationTarget) GetTargetChannelOk() (*string, bool) {
	if o == nil || o.TargetChannel == nil {
		return nil, false
	}
	return o.TargetChannel, true
}

// HasTargetChannel returns a boolean if a field has been set.
func (o *SubscriptionNotificationTarget) HasTargetChannel() bool {
	if o != nil && o.TargetChannel != nil {
		return true
	}

	return false
}

// SetTargetChannel gets a reference to the given string and assigns it to the TargetChannel field.
func (o *SubscriptionNotificationTarget) SetTargetChannel(v string) {
	o.TargetChannel = &v
}

func (o SubscriptionNotificationTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeSubscriptionIds != nil {
		toSerialize["include_subscription_ids"] = o.IncludeSubscriptionIds
	}
	if o.IncludeEmailTokens != nil {
		toSerialize["include_email_tokens"] = o.IncludeEmailTokens
	}
	if o.IncludePhoneNumbers != nil {
		toSerialize["include_phone_numbers"] = o.IncludePhoneNumbers
	}
	if o.IncludeIosTokens != nil {
		toSerialize["include_ios_tokens"] = o.IncludeIosTokens
	}
	if o.IncludeWpWnsUris != nil {
		toSerialize["include_wp_wns_uris"] = o.IncludeWpWnsUris
	}
	if o.IncludeAmazonRegIds != nil {
		toSerialize["include_amazon_reg_ids"] = o.IncludeAmazonRegIds
	}
	if o.IncludeChromeRegIds != nil {
		toSerialize["include_chrome_reg_ids"] = o.IncludeChromeRegIds
	}
	if o.IncludeChromeWebRegIds != nil {
		toSerialize["include_chrome_web_reg_ids"] = o.IncludeChromeWebRegIds
	}
	if o.IncludeAndroidRegIds != nil {
		toSerialize["include_android_reg_ids"] = o.IncludeAndroidRegIds
	}
	if o.IncludeAliases != nil {
		toSerialize["include_aliases"] = o.IncludeAliases
	}
	if o.TargetChannel != nil {
		toSerialize["target_channel"] = o.TargetChannel
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SubscriptionNotificationTarget) UnmarshalJSON(bytes []byte) (err error) {
	varSubscriptionNotificationTarget := _SubscriptionNotificationTarget{}

	if err = json.Unmarshal(bytes, &varSubscriptionNotificationTarget); err == nil {
		*o = SubscriptionNotificationTarget(varSubscriptionNotificationTarget)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "include_subscription_ids")
		delete(additionalProperties, "include_email_tokens")
		delete(additionalProperties, "include_phone_numbers")
		delete(additionalProperties, "include_ios_tokens")
		delete(additionalProperties, "include_wp_wns_uris")
		delete(additionalProperties, "include_amazon_reg_ids")
		delete(additionalProperties, "include_chrome_reg_ids")
		delete(additionalProperties, "include_chrome_web_reg_ids")
		delete(additionalProperties, "include_android_reg_ids")
		delete(additionalProperties, "include_aliases")
		delete(additionalProperties, "target_channel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSubscriptionNotificationTarget struct {
	value *SubscriptionNotificationTarget
	isSet bool
}

func (v NullableSubscriptionNotificationTarget) Get() *SubscriptionNotificationTarget {
	return v.value
}

func (v *NullableSubscriptionNotificationTarget) Set(val *SubscriptionNotificationTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionNotificationTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionNotificationTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionNotificationTarget(val *SubscriptionNotificationTarget) *NullableSubscriptionNotificationTarget {
	return &NullableSubscriptionNotificationTarget{value: val, isSet: true}
}

func (v NullableSubscriptionNotificationTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionNotificationTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


