/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// ApiKeyTokensListResponse struct for ApiKeyTokensListResponse
type ApiKeyTokensListResponse struct {
	Tokens []ApiKeyToken `json:"tokens,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiKeyTokensListResponse ApiKeyTokensListResponse

// NewApiKeyTokensListResponse instantiates a new ApiKeyTokensListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyTokensListResponse() *ApiKeyTokensListResponse {
	this := ApiKeyTokensListResponse{}
	return &this
}

// NewApiKeyTokensListResponseWithDefaults instantiates a new ApiKeyTokensListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyTokensListResponseWithDefaults() *ApiKeyTokensListResponse {
	this := ApiKeyTokensListResponse{}
	return &this
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *ApiKeyTokensListResponse) GetTokens() []ApiKeyToken {
	if o == nil || o.Tokens == nil {
		var ret []ApiKeyToken
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyTokensListResponse) GetTokensOk() ([]ApiKeyToken, bool) {
	if o == nil || o.Tokens == nil {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *ApiKeyTokensListResponse) HasTokens() bool {
	if o != nil && o.Tokens != nil {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []ApiKeyToken and assigns it to the Tokens field.
func (o *ApiKeyTokensListResponse) SetTokens(v []ApiKeyToken) {
	o.Tokens = v
}

func (o ApiKeyTokensListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tokens != nil {
		toSerialize["tokens"] = o.Tokens
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ApiKeyTokensListResponse) UnmarshalJSON(bytes []byte) (err error) {
	varApiKeyTokensListResponse := _ApiKeyTokensListResponse{}

	if err = json.Unmarshal(bytes, &varApiKeyTokensListResponse); err == nil {
		*o = ApiKeyTokensListResponse(varApiKeyTokensListResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "tokens")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiKeyTokensListResponse struct {
	value *ApiKeyTokensListResponse
	isSet bool
}

func (v NullableApiKeyTokensListResponse) Get() *ApiKeyTokensListResponse {
	return v.value
}

func (v *NullableApiKeyTokensListResponse) Set(val *ApiKeyTokensListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyTokensListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyTokensListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyTokensListResponse(val *ApiKeyTokensListResponse) *NullableApiKeyTokensListResponse {
	return &NullableApiKeyTokensListResponse{value: val, isSet: true}
}

func (v NullableApiKeyTokensListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyTokensListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


