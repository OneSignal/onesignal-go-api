/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// TemplatesListResponse struct for TemplatesListResponse
type TemplatesListResponse struct {
	Templates []TemplateResource `json:"templates,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TemplatesListResponse TemplatesListResponse

// NewTemplatesListResponse instantiates a new TemplatesListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatesListResponse() *TemplatesListResponse {
	this := TemplatesListResponse{}
	return &this
}

// NewTemplatesListResponseWithDefaults instantiates a new TemplatesListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatesListResponseWithDefaults() *TemplatesListResponse {
	this := TemplatesListResponse{}
	return &this
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *TemplatesListResponse) GetTemplates() []TemplateResource {
	if o == nil || o.Templates == nil {
		var ret []TemplateResource
		return ret
	}
	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplatesListResponse) GetTemplatesOk() ([]TemplateResource, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *TemplatesListResponse) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []TemplateResource and assigns it to the Templates field.
func (o *TemplatesListResponse) SetTemplates(v []TemplateResource) {
	o.Templates = v
}

func (o TemplatesListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TemplatesListResponse) UnmarshalJSON(bytes []byte) (err error) {
	varTemplatesListResponse := _TemplatesListResponse{}

	if err = json.Unmarshal(bytes, &varTemplatesListResponse); err == nil {
		*o = TemplatesListResponse(varTemplatesListResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "templates")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTemplatesListResponse struct {
	value *TemplatesListResponse
	isSet bool
}

func (v NullableTemplatesListResponse) Get() *TemplatesListResponse {
	return v.value
}

func (v *NullableTemplatesListResponse) Set(val *TemplatesListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatesListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatesListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatesListResponse(val *TemplatesListResponse) *NullableTemplatesListResponse {
	return &NullableTemplatesListResponse{value: val, isSet: true}
}

func (v NullableTemplatesListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatesListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


