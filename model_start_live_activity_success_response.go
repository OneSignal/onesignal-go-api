/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// StartLiveActivitySuccessResponse struct for StartLiveActivitySuccessResponse
type StartLiveActivitySuccessResponse struct {
	NotificationId *string `json:"notification_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StartLiveActivitySuccessResponse StartLiveActivitySuccessResponse

// NewStartLiveActivitySuccessResponse instantiates a new StartLiveActivitySuccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartLiveActivitySuccessResponse() *StartLiveActivitySuccessResponse {
	this := StartLiveActivitySuccessResponse{}
	return &this
}

// NewStartLiveActivitySuccessResponseWithDefaults instantiates a new StartLiveActivitySuccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartLiveActivitySuccessResponseWithDefaults() *StartLiveActivitySuccessResponse {
	this := StartLiveActivitySuccessResponse{}
	return &this
}

// GetNotificationId returns the NotificationId field value if set, zero value otherwise.
func (o *StartLiveActivitySuccessResponse) GetNotificationId() string {
	if o == nil || o.NotificationId == nil {
		var ret string
		return ret
	}
	return *o.NotificationId
}

// GetNotificationIdOk returns a tuple with the NotificationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartLiveActivitySuccessResponse) GetNotificationIdOk() (*string, bool) {
	if o == nil || o.NotificationId == nil {
		return nil, false
	}
	return o.NotificationId, true
}

// HasNotificationId returns a boolean if a field has been set.
func (o *StartLiveActivitySuccessResponse) HasNotificationId() bool {
	if o != nil && o.NotificationId != nil {
		return true
	}

	return false
}

// SetNotificationId gets a reference to the given string and assigns it to the NotificationId field.
func (o *StartLiveActivitySuccessResponse) SetNotificationId(v string) {
	o.NotificationId = &v
}

func (o StartLiveActivitySuccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NotificationId != nil {
		toSerialize["notification_id"] = o.NotificationId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *StartLiveActivitySuccessResponse) UnmarshalJSON(bytes []byte) (err error) {
	varStartLiveActivitySuccessResponse := _StartLiveActivitySuccessResponse{}

	if err = json.Unmarshal(bytes, &varStartLiveActivitySuccessResponse); err == nil {
		*o = StartLiveActivitySuccessResponse(varStartLiveActivitySuccessResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "notification_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStartLiveActivitySuccessResponse struct {
	value *StartLiveActivitySuccessResponse
	isSet bool
}

func (v NullableStartLiveActivitySuccessResponse) Get() *StartLiveActivitySuccessResponse {
	return v.value
}

func (v *NullableStartLiveActivitySuccessResponse) Set(val *StartLiveActivitySuccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStartLiveActivitySuccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStartLiveActivitySuccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartLiveActivitySuccessResponse(val *StartLiveActivitySuccessResponse) *NullableStartLiveActivitySuccessResponse {
	return &NullableStartLiveActivitySuccessResponse{value: val, isSet: true}
}

func (v NullableStartLiveActivitySuccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartLiveActivitySuccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


