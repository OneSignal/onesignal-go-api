/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// CustomEventsRequest struct for CustomEventsRequest
type CustomEventsRequest struct {
	Events []CustomEvent `json:"events"`
	AdditionalProperties map[string]interface{}
}

type _CustomEventsRequest CustomEventsRequest

// NewCustomEventsRequest instantiates a new CustomEventsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEventsRequest(events []CustomEvent) *CustomEventsRequest {
	this := CustomEventsRequest{}
	this.Events = events
	return &this
}

// NewCustomEventsRequestWithDefaults instantiates a new CustomEventsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEventsRequestWithDefaults() *CustomEventsRequest {
	this := CustomEventsRequest{}
	return &this
}

// GetEvents returns the Events field value
func (o *CustomEventsRequest) GetEvents() []CustomEvent {
	if o == nil {
		var ret []CustomEvent
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *CustomEventsRequest) GetEventsOk() ([]CustomEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *CustomEventsRequest) SetEvents(v []CustomEvent) {
	o.Events = v
}

func (o CustomEventsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["events"] = o.Events
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CustomEventsRequest) UnmarshalJSON(bytes []byte) (err error) {
	varCustomEventsRequest := _CustomEventsRequest{}

	if err = json.Unmarshal(bytes, &varCustomEventsRequest); err == nil {
		*o = CustomEventsRequest(varCustomEventsRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "events")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomEventsRequest struct {
	value *CustomEventsRequest
	isSet bool
}

func (v NullableCustomEventsRequest) Get() *CustomEventsRequest {
	return v.value
}

func (v *NullableCustomEventsRequest) Set(val *CustomEventsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEventsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEventsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEventsRequest(val *CustomEventsRequest) *NullableCustomEventsRequest {
	return &NullableCustomEventsRequest{value: val, isSet: true}
}

func (v NullableCustomEventsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEventsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


