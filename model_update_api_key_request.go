/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// UpdateApiKeyRequest struct for UpdateApiKeyRequest
type UpdateApiKeyRequest struct {
	Name *string `json:"name,omitempty"`
	IpAllowlistMode *string `json:"ip_allowlist_mode,omitempty"`
	IpAllowlist []string `json:"ip_allowlist,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateApiKeyRequest UpdateApiKeyRequest

// NewUpdateApiKeyRequest instantiates a new UpdateApiKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApiKeyRequest() *UpdateApiKeyRequest {
	this := UpdateApiKeyRequest{}
	return &this
}

// NewUpdateApiKeyRequestWithDefaults instantiates a new UpdateApiKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApiKeyRequestWithDefaults() *UpdateApiKeyRequest {
	this := UpdateApiKeyRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateApiKeyRequest) SetName(v string) {
	o.Name = &v
}

// GetIpAllowlistMode returns the IpAllowlistMode field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetIpAllowlistMode() string {
	if o == nil || o.IpAllowlistMode == nil {
		var ret string
		return ret
	}
	return *o.IpAllowlistMode
}

// GetIpAllowlistModeOk returns a tuple with the IpAllowlistMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetIpAllowlistModeOk() (*string, bool) {
	if o == nil || o.IpAllowlistMode == nil {
		return nil, false
	}
	return o.IpAllowlistMode, true
}

// HasIpAllowlistMode returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasIpAllowlistMode() bool {
	if o != nil && o.IpAllowlistMode != nil {
		return true
	}

	return false
}

// SetIpAllowlistMode gets a reference to the given string and assigns it to the IpAllowlistMode field.
func (o *UpdateApiKeyRequest) SetIpAllowlistMode(v string) {
	o.IpAllowlistMode = &v
}

// GetIpAllowlist returns the IpAllowlist field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetIpAllowlist() []string {
	if o == nil || o.IpAllowlist == nil {
		var ret []string
		return ret
	}
	return o.IpAllowlist
}

// GetIpAllowlistOk returns a tuple with the IpAllowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetIpAllowlistOk() ([]string, bool) {
	if o == nil || o.IpAllowlist == nil {
		return nil, false
	}
	return o.IpAllowlist, true
}

// HasIpAllowlist returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasIpAllowlist() bool {
	if o != nil && o.IpAllowlist != nil {
		return true
	}

	return false
}

// SetIpAllowlist gets a reference to the given []string and assigns it to the IpAllowlist field.
func (o *UpdateApiKeyRequest) SetIpAllowlist(v []string) {
	o.IpAllowlist = v
}

func (o UpdateApiKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.IpAllowlistMode != nil {
		toSerialize["ip_allowlist_mode"] = o.IpAllowlistMode
	}
	if o.IpAllowlist != nil {
		toSerialize["ip_allowlist"] = o.IpAllowlist
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UpdateApiKeyRequest) UnmarshalJSON(bytes []byte) (err error) {
	varUpdateApiKeyRequest := _UpdateApiKeyRequest{}

	if err = json.Unmarshal(bytes, &varUpdateApiKeyRequest); err == nil {
		*o = UpdateApiKeyRequest(varUpdateApiKeyRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "ip_allowlist_mode")
		delete(additionalProperties, "ip_allowlist")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateApiKeyRequest struct {
	value *UpdateApiKeyRequest
	isSet bool
}

func (v NullableUpdateApiKeyRequest) Get() *UpdateApiKeyRequest {
	return v.value
}

func (v *NullableUpdateApiKeyRequest) Set(val *UpdateApiKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApiKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApiKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApiKeyRequest(val *UpdateApiKeyRequest) *NullableUpdateApiKeyRequest {
	return &NullableUpdateApiKeyRequest{value: val, isSet: true}
}

func (v NullableUpdateApiKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApiKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


