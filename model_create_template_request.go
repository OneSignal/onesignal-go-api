/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 5.3.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// CreateTemplateRequest struct for CreateTemplateRequest
type CreateTemplateRequest struct {
	// Your OneSignal App ID in UUID v4 format.
	AppId string `json:"app_id"`
	// Name of the template.
	Name string `json:"name"`
	Contents LanguageStringMap `json:"contents"`
	// Set true for an Email template.
	IsEmail *bool `json:"isEmail,omitempty"`
	// Subject of the email.
	EmailSubject NullableString `json:"email_subject,omitempty"`
	// Body of the email (HTML supported).
	EmailBody NullableString `json:"email_body,omitempty"`
	// Set true for an SMS template.
	IsSMS *bool `json:"isSMS,omitempty"`
	// JSON string for dynamic content personalization.
	DynamicContent NullableString `json:"dynamic_content,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateTemplateRequest CreateTemplateRequest

// NewCreateTemplateRequest instantiates a new CreateTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTemplateRequest(appId string, name string, contents LanguageStringMap) *CreateTemplateRequest {
	this := CreateTemplateRequest{}
	this.AppId = appId
	this.Name = name
	this.Contents = contents
	return &this
}

// NewCreateTemplateRequestWithDefaults instantiates a new CreateTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTemplateRequestWithDefaults() *CreateTemplateRequest {
	this := CreateTemplateRequest{}
	return &this
}

// GetAppId returns the AppId field value
func (o *CreateTemplateRequest) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *CreateTemplateRequest) SetAppId(v string) {
	o.AppId = v
}

// GetName returns the Name field value
func (o *CreateTemplateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTemplateRequest) SetName(v string) {
	o.Name = v
}

// GetContents returns the Contents field value
func (o *CreateTemplateRequest) GetContents() LanguageStringMap {
	if o == nil {
		var ret LanguageStringMap
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetContentsOk() (*LanguageStringMap, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contents, true
}

// SetContents sets field value
func (o *CreateTemplateRequest) SetContents(v LanguageStringMap) {
	o.Contents = v
}

// GetIsEmail returns the IsEmail field value if set, zero value otherwise.
func (o *CreateTemplateRequest) GetIsEmail() bool {
	if o == nil || o.IsEmail == nil {
		var ret bool
		return ret
	}
	return *o.IsEmail
}

// GetIsEmailOk returns a tuple with the IsEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetIsEmailOk() (*bool, bool) {
	if o == nil || o.IsEmail == nil {
		return nil, false
	}
	return o.IsEmail, true
}

// HasIsEmail returns a boolean if a field has been set.
func (o *CreateTemplateRequest) HasIsEmail() bool {
	if o != nil && o.IsEmail != nil {
		return true
	}

	return false
}

// SetIsEmail gets a reference to the given bool and assigns it to the IsEmail field.
func (o *CreateTemplateRequest) SetIsEmail(v bool) {
	o.IsEmail = &v
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTemplateRequest) GetEmailSubject() string {
	if o == nil || o.EmailSubject.Get() == nil {
		var ret string
		return ret
	}
	return *o.EmailSubject.Get()
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTemplateRequest) GetEmailSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailSubject.Get(), o.EmailSubject.IsSet()
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *CreateTemplateRequest) HasEmailSubject() bool {
	if o != nil && o.EmailSubject.IsSet() {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given NullableString and assigns it to the EmailSubject field.
func (o *CreateTemplateRequest) SetEmailSubject(v string) {
	o.EmailSubject.Set(&v)
}
// SetEmailSubjectNil sets the value for EmailSubject to be an explicit nil
func (o *CreateTemplateRequest) SetEmailSubjectNil() {
	o.EmailSubject.Set(nil)
}

// UnsetEmailSubject ensures that no value is present for EmailSubject, not even an explicit nil
func (o *CreateTemplateRequest) UnsetEmailSubject() {
	o.EmailSubject.Unset()
}

// GetEmailBody returns the EmailBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTemplateRequest) GetEmailBody() string {
	if o == nil || o.EmailBody.Get() == nil {
		var ret string
		return ret
	}
	return *o.EmailBody.Get()
}

// GetEmailBodyOk returns a tuple with the EmailBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTemplateRequest) GetEmailBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailBody.Get(), o.EmailBody.IsSet()
}

// HasEmailBody returns a boolean if a field has been set.
func (o *CreateTemplateRequest) HasEmailBody() bool {
	if o != nil && o.EmailBody.IsSet() {
		return true
	}

	return false
}

// SetEmailBody gets a reference to the given NullableString and assigns it to the EmailBody field.
func (o *CreateTemplateRequest) SetEmailBody(v string) {
	o.EmailBody.Set(&v)
}
// SetEmailBodyNil sets the value for EmailBody to be an explicit nil
func (o *CreateTemplateRequest) SetEmailBodyNil() {
	o.EmailBody.Set(nil)
}

// UnsetEmailBody ensures that no value is present for EmailBody, not even an explicit nil
func (o *CreateTemplateRequest) UnsetEmailBody() {
	o.EmailBody.Unset()
}

// GetIsSMS returns the IsSMS field value if set, zero value otherwise.
func (o *CreateTemplateRequest) GetIsSMS() bool {
	if o == nil || o.IsSMS == nil {
		var ret bool
		return ret
	}
	return *o.IsSMS
}

// GetIsSMSOk returns a tuple with the IsSMS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetIsSMSOk() (*bool, bool) {
	if o == nil || o.IsSMS == nil {
		return nil, false
	}
	return o.IsSMS, true
}

// HasIsSMS returns a boolean if a field has been set.
func (o *CreateTemplateRequest) HasIsSMS() bool {
	if o != nil && o.IsSMS != nil {
		return true
	}

	return false
}

// SetIsSMS gets a reference to the given bool and assigns it to the IsSMS field.
func (o *CreateTemplateRequest) SetIsSMS(v bool) {
	o.IsSMS = &v
}

// GetDynamicContent returns the DynamicContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTemplateRequest) GetDynamicContent() string {
	if o == nil || o.DynamicContent.Get() == nil {
		var ret string
		return ret
	}
	return *o.DynamicContent.Get()
}

// GetDynamicContentOk returns a tuple with the DynamicContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTemplateRequest) GetDynamicContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DynamicContent.Get(), o.DynamicContent.IsSet()
}

// HasDynamicContent returns a boolean if a field has been set.
func (o *CreateTemplateRequest) HasDynamicContent() bool {
	if o != nil && o.DynamicContent.IsSet() {
		return true
	}

	return false
}

// SetDynamicContent gets a reference to the given NullableString and assigns it to the DynamicContent field.
func (o *CreateTemplateRequest) SetDynamicContent(v string) {
	o.DynamicContent.Set(&v)
}
// SetDynamicContentNil sets the value for DynamicContent to be an explicit nil
func (o *CreateTemplateRequest) SetDynamicContentNil() {
	o.DynamicContent.Set(nil)
}

// UnsetDynamicContent ensures that no value is present for DynamicContent, not even an explicit nil
func (o *CreateTemplateRequest) UnsetDynamicContent() {
	o.DynamicContent.Unset()
}

func (o CreateTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["contents"] = o.Contents
	}
	if o.IsEmail != nil {
		toSerialize["isEmail"] = o.IsEmail
	}
	if o.EmailSubject.IsSet() {
		toSerialize["email_subject"] = o.EmailSubject.Get()
	}
	if o.EmailBody.IsSet() {
		toSerialize["email_body"] = o.EmailBody.Get()
	}
	if o.IsSMS != nil {
		toSerialize["isSMS"] = o.IsSMS
	}
	if o.DynamicContent.IsSet() {
		toSerialize["dynamic_content"] = o.DynamicContent.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateTemplateRequest) UnmarshalJSON(bytes []byte) (err error) {
	varCreateTemplateRequest := _CreateTemplateRequest{}

	if err = json.Unmarshal(bytes, &varCreateTemplateRequest); err == nil {
		*o = CreateTemplateRequest(varCreateTemplateRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "app_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "contents")
		delete(additionalProperties, "isEmail")
		delete(additionalProperties, "email_subject")
		delete(additionalProperties, "email_body")
		delete(additionalProperties, "isSMS")
		delete(additionalProperties, "dynamic_content")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateTemplateRequest struct {
	value *CreateTemplateRequest
	isSet bool
}

func (v NullableCreateTemplateRequest) Get() *CreateTemplateRequest {
	return v.value
}

func (v *NullableCreateTemplateRequest) Set(val *CreateTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTemplateRequest(val *CreateTemplateRequest) *NullableCreateTemplateRequest {
	return &NullableCreateTemplateRequest{value: val, isSet: true}
}

func (v NullableCreateTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


