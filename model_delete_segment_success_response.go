/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 1.4.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// DeleteSegmentSuccessResponse struct for DeleteSegmentSuccessResponse
type DeleteSegmentSuccessResponse struct {
	Success *bool `json:"success,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeleteSegmentSuccessResponse DeleteSegmentSuccessResponse

// NewDeleteSegmentSuccessResponse instantiates a new DeleteSegmentSuccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSegmentSuccessResponse() *DeleteSegmentSuccessResponse {
	this := DeleteSegmentSuccessResponse{}
	return &this
}

// NewDeleteSegmentSuccessResponseWithDefaults instantiates a new DeleteSegmentSuccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSegmentSuccessResponseWithDefaults() *DeleteSegmentSuccessResponse {
	this := DeleteSegmentSuccessResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *DeleteSegmentSuccessResponse) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentSuccessResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *DeleteSegmentSuccessResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *DeleteSegmentSuccessResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o DeleteSegmentSuccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DeleteSegmentSuccessResponse) UnmarshalJSON(bytes []byte) (err error) {
	varDeleteSegmentSuccessResponse := _DeleteSegmentSuccessResponse{}

	if err = json.Unmarshal(bytes, &varDeleteSegmentSuccessResponse); err == nil {
		*o = DeleteSegmentSuccessResponse(varDeleteSegmentSuccessResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "success")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeleteSegmentSuccessResponse struct {
	value *DeleteSegmentSuccessResponse
	isSet bool
}

func (v NullableDeleteSegmentSuccessResponse) Get() *DeleteSegmentSuccessResponse {
	return v.value
}

func (v *NullableDeleteSegmentSuccessResponse) Set(val *DeleteSegmentSuccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSegmentSuccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSegmentSuccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSegmentSuccessResponse(val *DeleteSegmentSuccessResponse) *NullableDeleteSegmentSuccessResponse {
	return &NullableDeleteSegmentSuccessResponse{value: val, isSet: true}
}

func (v NullableDeleteSegmentSuccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSegmentSuccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


