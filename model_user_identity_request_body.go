/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 1.4.0
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// UserIdentityRequestBody struct for UserIdentityRequestBody
type UserIdentityRequestBody struct {
	Identity map[string]interface{} `json:"identity,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserIdentityRequestBody UserIdentityRequestBody

// NewUserIdentityRequestBody instantiates a new UserIdentityRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserIdentityRequestBody() *UserIdentityRequestBody {
	this := UserIdentityRequestBody{}
	return &this
}

// NewUserIdentityRequestBodyWithDefaults instantiates a new UserIdentityRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserIdentityRequestBodyWithDefaults() *UserIdentityRequestBody {
	this := UserIdentityRequestBody{}
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *UserIdentityRequestBody) GetIdentity() map[string]interface{} {
	if o == nil || o.Identity == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIdentityRequestBody) GetIdentityOk() (map[string]interface{}, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *UserIdentityRequestBody) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given map[string]interface{} and assigns it to the Identity field.
func (o *UserIdentityRequestBody) SetIdentity(v map[string]interface{}) {
	o.Identity = v
}

func (o UserIdentityRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UserIdentityRequestBody) UnmarshalJSON(bytes []byte) (err error) {
	varUserIdentityRequestBody := _UserIdentityRequestBody{}

	if err = json.Unmarshal(bytes, &varUserIdentityRequestBody); err == nil {
		*o = UserIdentityRequestBody(varUserIdentityRequestBody)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "identity")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserIdentityRequestBody struct {
	value *UserIdentityRequestBody
	isSet bool
}

func (v NullableUserIdentityRequestBody) Get() *UserIdentityRequestBody {
	return v.value
}

func (v *NullableUserIdentityRequestBody) Set(val *UserIdentityRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUserIdentityRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUserIdentityRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserIdentityRequestBody(val *UserIdentityRequestBody) *NullableUserIdentityRequestBody {
	return &NullableUserIdentityRequestBody{value: val, isSet: true}
}

func (v NullableUserIdentityRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserIdentityRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


